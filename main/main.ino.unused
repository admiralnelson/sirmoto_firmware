#include <WiFi.h>
#include <DNSServer.h>
#include <WebServer.h>
#include <WiFiManager.h>
#include <ping.h>
// select which pin will trigger the configuration portal when set to LOW
// ESP-01 users please note: the only pins available (0 and 2), are shared 
// with the bootloader, so always set them HIGH at power-up
#define TRIGGER_PIN 0

WebServer server(80);

String Head()
{
	String out;
	out = " ";
	out += "	<html>";
	out +="		<head>";
	out +="			<style>";
	out +="				body{";
	out +="				}";
	out +="				body{";
	out +="				}";
	out +="			</style>";
	out +="		</head>";
	out +="		<body>";
	out +="			<div>";
	out +="				<span><a href=\"index\" >Home</a></span> | ";
	out +="				<span><a href=\"settings\">Setting</a></span> | ";
	out +="				<span><a href=\"account\">Account</a></span> | " ;
	out +="			</div>	";
	return out;
}


String Foot()
{
	String out;
	out = " " ;
	out +="		</body>";
	out +="	</html>";
	return out;
}


void CredentialSetup()
{
    String out = Head();
    if(InternetConnectionTest())
    {
        out += "<form method='post'>";
            out += "Email:<input type='text' name='email' />";
            out += "Password:<input type='text' name='password' />";
            out += "<button type='submit'>Login</button>";
        out += "</form>";
    }
    else
    {
        out += "<h1>No Internet connection</h1>";
    }
    out += Foot();
    server.send(200, "text/html", out);
}



bool InternetConnectionTest()
{
    IPAddress adr = IPAddress(8,8,8, 8);
    int target = 4;
    size_t i = 0;
    for(i=0; i < 5; i++)
        ping_start(adr, 4, 0, 0, 5) ? i++ : i;
    return i == 4;
    
}

void setup()
{
    // put your setup code here, to run once:
    Serial.begin(115200);
    Serial.println("\n Starting");
    server.on("/all", HTTP_GET, [](){
        String json = "{";
        json += "\"heap\":"+String(ESP.getFreeHeap());
        json += ", \"analog\":"+String(analogRead(A0));
        json += "}";
        server.send(200, "text/json", json);
        json = String();
    });
    server.on("/login", HTTP_GET, CredentialSetup);
    server.begin();
    pinMode(TRIGGER_PIN, INPUT);
}


void loop() 
{
    // is configuration portal requested?
    if ( true )
    { //config pin
        //WiFiManager
        //Local intialization. Once its business is done, there is no need to keep it around
        WiFiManager wifiManager;

        //reset settings - for testing
        //wifiManager.resetSettings();

        //sets timeout until configuration portal gets turned off
        //useful to make it all retry or go to sleep
        //in seconds
        //wifiManager.setTimeout(120);

        //it starts an access point with the specified name
        //here    "AutoConnectAP"
        //and goes into a blocking loop awaiting configuration

        //WITHOUT THIS THE AP DOES NOT SEEM TO WORK PROPERLY WITH SDK 1.5 , update to at least 1.5.1
        //WiFi.mode(WIFI_STA);
        
        if (!wifiManager.startConfigPortal("OnDemandAP")) 
        {
            Serial.println("failed to connect and hit timeout");
            delay(3000);
            //reset and try again, or maybe put it to deep sleep
            ESP.restart();
            delay(5000);
        }
        else
        {
            server.handleClient();
        }


        //if you get here you have connected to the WiFi
        Serial.println("connected...yeey :)");
    }


    // put your main code here, to run repeatedly:

}
